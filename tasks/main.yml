---
- name: Have my dotfiles
  git: 
      repo: https://github.com/RobertLarsen/dotfiles.git
      dest: "{{ local_repositories_dir }}/dotfiles"

- name: Install Vim 8
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16"
  include_tasks: install_vim8.yml

- name: Install neovim
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16"
  include_tasks: install_neovim.yml

- name: Install vim and dependencies, Debian version
  when: ansible_os_family == "Debian"
  become: true
  apt:
      update_cache: yes
      name:
      - neovim
      - vim
      - git
      - clang
      - build-essential
      - cmake
      - python-dev
      - exuberant-ctags
      - golang-go
      - tmux
      - shellcheck

- name: Install vim and dependencies, RedHat version
  when: ansible_os_family == "RedHat"
  become: true
  yum:
      name:
      - vim-enhanced
      - git
      - clang
      - gcc
      - gcc-c++
      - cmake
      - python-devel
      - ctags
      - golang-bin
      - golang-docs
      - tmux
      - shellcheck

- set_fact: ctags=ctags
  when: ansible_os_family == "RedHat"

- set_fact: ctags=ctags-exuberant
  when: ansible_os_family == "Debian"

- name: Create directories 
  file:
      path: "{{ item }}"
      state: directory
      recurse: true
  with_items:
      - "{{ local_repositories_dir }}"
      - "{{ ansible_user_dir }}/.vim/bundle"
      - "{{ ansible_user_dir }}/.vim/autoload"

- name: Have ctags
  command: "{{ ctags }} --fields=+S --sort=yes -f {{ ansible_user_dir }}/.vim/{{ item.outfile }} -R {{ item.path }}"
  args:
      creates: "{{ ansible_user_dir }}/.vim/{{ item.outfile }}"
  with_items:
      - {outfile: "systags", path: "/usr/include"}

# I had .vimrc and .tmux.conf copied to the $HOME folder
# Now I would rather have symlinks to a GitHub repo
# So if they are files, delete them
- name: Check if .vimrc is a file
  stat: path="{{ ansible_user_dir }}/.vimrc"
  register: vimrc

- name: Check if .tmux.conf is a file
  stat: path="{{ ansible_user_dir }}/.tmux.conf"
  register: tmux_conf

- name: Delete .vimrc if it is a file
  file: path="{{ ansible_user_dir }}/.vimrc" state=absent
  when: vimrc.stat.isreg is defined and vimrc.stat.isreg

- name: Delete .tmux.conf if it is a file
  file: path="{{ ansible_user_dir }}/.tmux.conf" state=absent
  when: tmux_conf.stat.isreg is defined and tmux_conf.stat.isreg

- name: Install Vim configuration files
  file:
      dest: "{{ ansible_user_dir }}/.vimrc"
      src: "{{ local_repositories_dir }}/dotfiles/vimrc"
      state: link

- name: Install TMUX configuration file
  file:
      dest: "{{ ansible_user_dir }}/.tmux.conf"
      src: "{{ local_repositories_dir }}/dotfiles/tmux.conf"
      state: link

- name: Install PHP Coding Standard Fixer
  become: true
  get_url:
      url: http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar
      dest: /usr/local/bin/php-cs-fixer
      owner: root
      group: root
      mode: "0755"

- name: Install Vim plugins
  import_tasks: install_vim_plugins.yml
